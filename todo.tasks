{"deleted":true,"desc":"","last_edited":1761718291351,"position":-20.75,"task_id":"7fcbdf13-607d-4e0f-a064-4593e6b7d26e"}
{"deleted":true,"desc":"3\\) Debounce your “micro\\-sync complete” rescan\n\nYour log shows it firing twice per batch. If that’s your own scheduler, consider debouncing per phase so you trigger once at the end of the merge.\n\n","last_edited":1761510330797,"position":-4.4375,"task_id":"ced0b724-16fa-48a9-ba24-994232903e2b"}
{"deleted":true,"desc":"delete chunks in parallel?\n","last_edited":1761542700125,"position":-4.8125,"task_id":"c2def45a-0248-41e8-8b22-3634be95d7f3"}
{"desc":"#0 #easy show the syncroot digests in session status\n","done":true,"last_edited":1761934551890,"position":-39.9375,"task_id":"2a72ac83-b7b7-4d1c-a4f7-98577dacf7cc"}
{"desc":"#0 I tried git clone cocalc on a slower network and eventually it converged, but there were hundreds of microsyncs.  Seems very dumb.\n","last_edited":1761929565268,"position":-38.4375,"task_id":"c4c0fa8e-1673-4261-914b-3882bb7faf15"}
{"desc":"#0 ability to edit certain properties of sessions:\n\n- compress\n- ignore list \\(once in db?\\)\n- full scan interval \\(also this needs to be a param\\)\n\n","last_edited":1761952335887,"position":-30.9921875,"task_id":"ad182af7-139e-4b55-9dfe-6c7e8205ffef"}
{"desc":"#0 ccsync session reset\n","last_edited":1761929499541,"position":-39.1875,"task_id":"a902f752-410a-4828-8c97-43d1da3cf216"}
{"desc":"#0 cli \\-\\- flush \\-\\- use that digests are equal on both sides would give us total confidence.\n","last_edited":1761929501332,"position":-5.8125,"task_id":"c4c9c766-b292-4027-9490-b5e11f197676"}
{"desc":"#0 create a daemon\n","last_edited":1761929561726,"position":-39.4375,"task_id":"808f2485-3bb2-4692-9ccc-fb52abebb5ec"}
{"desc":"#0 exclude config files automatically  \\-\\- .local/share/reflect\\-sync\n","last_edited":1761929520377,"position":-39.5625,"task_id":"ad38ed91-826f-419e-8ff1-3e238a6a0d0f"}
{"desc":"#0 if creating session fails, delete from database \\(try / catch\\)\n","last_edited":1761950397213,"position":-31.140625,"task_id":"d00300fe-0009-437a-be4c-d127345c760a"}
{"desc":"#0 much better observability, e.g., rsync progress, what exactly is happening with sessions, etc., history\n","last_edited":1761929503503,"position":-30.25,"task_id":"3dd34736-0885-4324-aaf0-7dc8765623ad"}
{"desc":"#0 remote reflect\\-sync command: if attempt to run fails, use remoteWhich to figure out exact path, then use exact path until it doesn't work.   when setting up session figure out the path .\n\n- [x] switch to discovering path to remote command\n- [x] the webworker in the bundle doesn't work at all yet either\n- [ ] if remote \\(or local\\) scan fails... shouldn't start deleting all files, but that's definitely what happens.  We need to be better about deciding when a file is deleted.\n\n","last_edited":1761929601369,"position":-38.9375,"task_id":"4ecc8aac-1312-48c1-a42e-5215a173a57b"}
{"desc":"#0 reorg cli and make the session commands at the top and the reset hidden under something advanced ?\n\n- put port forward under subcommand though?\n- ReflectPort is a neat name \\-\\- should be its own project!?\n\n","last_edited":1761929543949,"position":-34.9375,"task_id":"17ee1a76-bdbb-46dd-b8b0-08d34464bec8"}
{"desc":"#0 replace the ignore _file_ by database configuration. It's critical it be same on both sides so digest matches up, and it feels like database is the right place.\n","last_edited":1761929541330,"position":-33.9375,"task_id":"c7e05ee7-85f6-4b0e-89ed-1b8ebb31bfab"}
{"desc":"#0 session terminate needs to delete remote db\n","last_edited":1761935447301,"position":-41.6875,"task_id":"407276fd-b22b-427c-9185-2d80b4d7fb3b"}
{"desc":"#0 support ports in the syncroot spec and everywhere else.\n\n","last_edited":1761929530283,"position":-40.6875,"task_id":"87998d7b-313f-4484-a03e-caf5595b411d"}
{"desc":"#0 when creating a paused session the database files are NEVER created anywhere? \\(true but makes no sense yet\\)\n","last_edited":1761929525174,"position":-32,"task_id":"1d3989d7-8221-44d3-bca6-024f557a4120"}
{"desc":"#1 #dist #sea macos signed binaries\n","last_edited":1761929554107,"position":1.625,"task_id":"809d1dd4-46bc-4c02-9dc0-67d0a5010d51"}
{"desc":"#1 #dist build a static rsync \\(since it's often very old etc on some systems\\), and I can see now exactly how to add that as an asset and copy it out if needed to ~/.cocalc/reflect\\-sync.\n","last_edited":1761929546846,"position":1.125,"task_id":"f911c19e-356b-4219-b966-236a457c06dc"}
{"desc":"#1 #idea can we use our database to do internal file\\-level dedup on a COW filesystem?  i.e., scan the db and when there are two files A and B with the same hash, do something to identify them if they are really equal.  I don't know if this can be safely done \"online\", or how big of a saving it would be in general... but it's worth considering.\n","last_edited":1761759310457,"position":-0.375,"task_id":"d25a5266-7ec7-411d-982a-3a4b4b761dda"}
{"desc":"#1 #sea #dist package rsync as a static binary with sea\n","last_edited":1761929496513,"position":0.625,"task_id":"e5973dff-3f08-4082-8010-8018e4941001"}
{"desc":"#1 #speed moves?\n\n- can be done but quite complicated\n- i made a moves branch\n\n","last_edited":1761717956259,"position":0.125,"task_id":"2c9fd2c3-6a58-47c1-b4f6-d35596c1ec16"}
{"desc":"#1 more stress testing \\(large randomized sync runs\\)\n","last_edited":1761929507172,"position":-2.15625,"task_id":"f9ce7c5f-2f27-4c2c-be12-3832f1186c71"}
{"desc":"#now #0 #easy show location of config/data files for sync session\n","done":true,"last_edited":1761935430370,"position":-39.8125,"task_id":"7150b47a-97fd-4076-9bc1-276c66ee0f95"}
{"desc":"#now #0 support rsync compression\n","done":true,"last_edited":1761952360045,"position":-30.84375,"task_id":"e41522e8-649f-453c-9952-9e1a302e669b"}
{"desc":"#now #bug create file on alpha, wiat for it to sync, before next scan delete it from beta.  It was never in the database on the beta side, so the fact it was deleted isn't noticed and now the two sides are inconsistent.\n","done":true,"last_edited":1761708309642,"position":-20.8125,"task_id":"faa82f49-db57-433f-9125-c4e71e6f04ee"}
{"desc":"#now #dist switch to built in sqlite\n\n","done":true,"last_edited":1761757125606,"position":-25.4375,"task_id":"1747e860-6885-42fd-b2d4-266a7cac862e"}
{"desc":"#now #name rename: ccsync \\-\\-&gt; reflectsync\n","done":true,"last_edited":1761862671210,"position":-32.9375,"task_id":"86bee64d-ba4f-4dd5-bbcd-893f4b922e93"}
{"desc":"#now #speed do the two scans in parallel ?\n","done":true,"last_edited":1761680740279,"position":-16.3125,"task_id":"b4303340-ffc6-42b9-bc2e-568619a0143c"}
{"desc":"#now clean up tombstones... and migrate to all relative paths\n","done":true,"last_edited":1761547139095,"position":-5.6875,"task_id":"9ce325e2-8c5e-4b5b-9c85-418c86291a5a"}
{"desc":"#now crash due to ignore\n\n```\ncsync scan --root /home/wstein/scratch/y --db beta.db --verbose\nrunning scan with database =  beta.db\n/home/wstein/build/ccsync/node_modules/.pnpm/ignore@7.0.5/node_modules/ignore/index.js:557\n  throw new Ctor(message)\n        ^\n\nRangeError: path should be a `path.relative()`d string, but got \"../../build/ccsync/dist/\"\n    at throwError (/home/wstein/build/ccsync/node_modules/.pnpm/ignore@7.0.5/node_modules/ignore/index.js:557:9)\n    at checkPath (/home/wstein/build/ccsync/node_modules/.pnpm/ignore@7.0.5/node_modules/ignore/index.js:576:12)\n    at Ignore._test (/home/wstein/build/ccsync/node_modules/.pnpm/ignore@7.0.5/node_modules/ignore/index.js:637:5)\n    at Ignore.ignores (/home/wstein/build/ccsync/node_modules/.pnpm/ignore@7.0.5/node_modules/ignore/index.js:720:17)\n    at HotWatchManager.localIgnoresDir (file:///home/wstein/build/ccsync/dist/hotwatch.js:97:24)\n    at HotWatchManager.isIgnored (file:///home/wstein/build/ccsync/dist/hotwatch.js:107:20)\n    at handler (file:///home/wstein/build/ccsync/dist/hotwatch.js:142:22)\n    at FSWatcher.<anonymous> (file:///home/wstein/build/ccsync/dist/hotwatch.js:167:36)\n    at FSWatcher.emit (node:events:508:28)\n    at FSWatcher.emitWithAll (file:///home/wstein/build/ccsync/node_modules/.pnpm/chokidar@4.0.3/node_modules/chokidar/esm/index.js:431:14)\n\nNode.js v24.8.0\n```\n\n","done":true,"hideBody":true,"last_edited":1761611277956,"position":-10.8125,"task_id":"467c1671-344f-4431-b1fc-d12f20a24160"}
{"desc":"#now do NOT setup hot watches unless there is activity as indicated by a recent _mtime_.\n","done":true,"last_edited":1761715251630,"position":-22.8125,"task_id":"8fd5f1bc-07e7-4732-b1fd-144ce0edeef7"}
{"desc":"#now don't publish tests to npmjs\n","done":true,"last_edited":1761758854263,"position":-27.4375,"task_id":"72e825ec-0762-4a21-8c29-d592e77e82e9"}
{"desc":"#now is it possible to use reflink on a single filesystem?\n\n- yes\n- [x] make fast\n- [x] #now also for hot updates\n\n","done":true,"last_edited":1761690637289,"position":-20.3125,"task_id":"3a7fd90a-13dc-4606-a569-e21e8fec5e0f"}
{"desc":"#now make \"syncing a fully built copy of cocalc with all node\\_modules\" rock solid and fast\n","done":true,"last_edited":1761507498793,"position":-4.9375,"task_id":"29cb086f-a649-4c47-a89f-7aa780d159d5"}
{"desc":"#now maybe switch to a hash in libcrypto after all... even though it costs more cpu, or see what the options are more for something that doesn't have a binary dependency.\n\n- [ ]size idea \\-\\- make hash field in database more compact?\n\n","done":true,"last_edited":1761884370357,"position":-31.9375,"task_id":"d3f54d13-2c06-44ab-a615-cb6ab8babd9b"}
{"desc":"#now multiple remote watches which don't get killed properly and waste resources.\n","done":true,"last_edited":1761712383448,"position":-21.8125,"task_id":"cbd05b79-8230-41a9-bedf-ab268e7f949a"}
{"desc":"#now propagate uid/gid using numeric ids \\-\\- but ONLY if user is uid=0.\n","done":true,"last_edited":1761673805020,"position":-12.8125,"task_id":"25d2f344-f73c-421e-8488-55aad5da4865"}
{"desc":"#now quiet fast path\n","done":true,"last_edited":1761510314398,"position":-5.9375,"task_id":"dd5f63a1-a0fe-4a40-999b-88c774b40a0d"}
{"desc":"#now symlink loop\n","done":true,"last_edited":1761595269899,"position":-8.8125,"task_id":"1390aca8-d622-4bee-b1aa-7cc84f840dfb"}
{"desc":"#now symlink scan problems\n","done":true,"last_edited":1761671652269,"position":-12.5625,"task_id":"a38d3f7d-57b6-457b-bf6c-868486b9747f"}
{"desc":"#now vacuuming \n\n- [x] local\n- [x] remote vacuum \\- add a \"\\-\\-vacuum\" option to scan and pass that when called on remote\n- [x] deleting paths from remote table \\- add \"delete\\-after\\-....\" option to scan.\n\n","done":true,"last_edited":1761717911042,"position":-21.0625,"task_id":"401bf297-7f96-46bc-aecb-50989e60b91f"}
{"desc":"#speed add other operations to microSync:\n\n- [ ] actually fully read the new micro\\-sync.ts carefully\n- directory creation/removal\n- symlinks creation/removal\n- file removal\n\n","done":true,"last_edited":1761845775605,"position":-31.4375,"task_id":"6e77ec92-5ab5-416e-8757-578abe78884c"}
{"desc":"#today sea binary\n\n- [x] need to fix calling .js paths\n- [x] silence rollup warnin\n\n","done":true,"last_edited":1761890339172,"position":-36.9375,"task_id":"7d99ed5d-484c-491a-bb71-e02ed1f0db62"}
{"desc":"I think at least one query for the merge plan scales very badly. super slow on a built cocalc...?\n\n","done":true,"last_edited":1761502618785,"position":-1.9375,"task_id":"1670b2bd-2366-4d7c-bb92-9b6bd4ba7940"}
{"desc":"big worry \\-\\- if there are two sessions with the same remote beta \\(different alpha\\), and they have the same id, they will store the remotedb in the same place.  NOT good at all.   We'll have to sort this out, but I'm not sure how. Options:\n\n- switch from a sequential numeric id for the session back to a random hash \\(like mutagen uses\\). that easily solves the problem.\n- actually, i can't think of anything better that works in general.\n\n","done":true,"last_edited":1761845848161,"position":-30.1875,"task_id":"75d789d7-f013-424f-8e15-bc5bf5290051"}
{"desc":"ccsync session &lt;command to show where state files are&gt;\n\n","done":true,"last_edited":1761771757768,"position":-28.4375,"task_id":"6ce01cf0-4135-4159-b13f-2c0c339bee4d"}
{"desc":"crash when try to watch something and permission is denied!\n\n```sh\nrsync -a -I --relative --from0 --files-from=/tmp/micro-plan-Y3XayJ/toAlpha.list /home/wstein/scratch/y/ /home/wstein/scratch/x/\nℹ️ [scheduler] event-triggered rescan scheduled: micro-sync complete \nnode:internal/fs/watchers:254\n    const error = new UVException({\n                  ^\n\nError: EACCES: permission denied, watch '/home/wstein/scratch/y/pytorch/pytorch:2.8.0-cuda12.9-cudnn9-runtime/lib/ssl/private'\n    at FSWatcher.<computed> (node:internal/fs/watchers:254:19)\n    at watch (node:fs:2539:36)\n    at createFsWatchInstance (file:///home/wstein/build/ccsync/node_modules/.pnpm/chokidar@4.0.3/node_modules/chokidar/esm/handler.js:126:16)\n    at setFsWatchListener (file:///home/wstein/build/ccsync/node_modules/.pnpm/chokidar@4.0.3/node_modules/chokidar/esm/handler.js:171:19)\n    at NodeFsHandler._watchWithNodeFs (file:///home/wstein/build/ccsync/node_modules/.pnpm/chokidar@4.0.3/node_modules/chokidar/esm/handler.js:325:22)\n    at NodeFsHandler._handleDir (file:///home/wstein/build/ccsync/node_modules/.pnpm/chokidar@4.0.3/node_modules/chokidar/esm/handler.js:546:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async NodeFsHandler._addToNodeFs (file:///home/wstein/build/ccsync/node_modules/.pnpm/chokidar@4.0.3/node_modules/chokidar/esm/handler.js:591:26)\nEmitted 'error' event on FSWatcher instance at:\n    at FSWatcher._handleError (file:///home/wstein/build/ccsync/node_modules/.pnpm/chokidar@4.0.3/node_modules/chokidar/esm/index.js:534:18)\n    at NodeFsHandler._addToNodeFs (file:///home/wstein/build/ccsync/node_modules/.pnpm/chokidar@4.0.3/node_modules/chokidar/esm/handler.js:623:26)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5) {\n  errno: -13,\n  syscall: 'watch',\n  code: 'EACCES',\n  path: '/home/wstein/scratch/y/pytorch/pytorch:2.8.0-cuda12.9-cudnn9-runtime/lib/ssl/private',\n  filename: '/home/wstein/scratch/y/pytorch/pytorch:2.8.0-cuda12.9-cudnn9-runtime/lib/ssl/private'\n}\n\nNode.js v24.8.0\nwstein@lite:~/build/ccsync$ time: 18790 ms\n>>> rsync alpha→beta: done (code 0)\n>>> rsync beta→alpha (/home/wstein/scratch/y -> /home/wstein/scratch/x)\n$ rsync -a -I --relative --whole-file --from0 --files-from=/tmp/sync-plan-6EOP5R/toAlpha.list /home/wstein/scratch/y/ /home/wstein/scratch/x/\ntime: 57 ms\n>>> rsync beta→alpha: done (code 0)\n[phase] rsync: 3) copy files: 18848 ms\n[phase] rsync: 4) delete dirs: running...\nrsync's all done, now updating database\n[phase] post rsync database update: running...\n[plan] insert plan tables: 39 ms\nPlan table counts: to_beta=76571 to_alpha=4 del_beta=0 del_alpha=0\nPlan dir counts   : d_to_beta=7202 d_to_alpha=3 d_del_beta=0 d_del_alpha=0\n[phase] post rsync database update: 383 ms\n[phase] drop tombstones: running...\n[phase] drop tombstones: 28 ms\n[phase] sqlite hygiene: running...\nMerge complete.\n```\n\n","done":true,"last_edited":1761626544087,"position":-6.8125,"task_id":"1c1add8a-cbb5-4ef8-8a55-b2905a4935b0"}
{"desc":"don't run hot updates while full sync cycle is running??\n\ndoing this could be very weird annoying for users since updates switch from being instant to suddenly being really slow.  So NO, do NOT do this.  This is supposed to be realtime.\n\n- right now things utterly go to hell if hot watch is enabled for a remote server, and we copy in a built cocalc, then keep moving it to stress.  files start vanishing from the remote.  It's very bad.\n- I think that the entire scan process must work with arbitrary file activity happening on either side, and no assumptions about that.\n- It's only when file activity stops that sync is guaranteed to lead to a consistent filesystem with our rules.\n\n","done":true,"hideBody":true,"last_edited":1761771319418,"position":0.625,"task_id":"fff0fe9e-7524-4348-8797-8f724c56109f"}
{"desc":"fix digest\n","done":true,"last_edited":1761543649925,"position":-5.4375,"task_id":"32a0a959-17f4-4273-ae11-eccd8ed4db16"}
{"desc":"ignore\n\n- [x] don't watch ignored files\n- [x] don't scan ignored files\n\n","done":true,"last_edited":1761458990155,"position":-1,"task_id":"74fd2541-de8c-4a8a-ac43-5e3fa3d283dc"}
{"desc":"location of remote db in scheduler needs to be more sensible:\n\n```\n      // use same path as local DB, but on remote:\n      // [ ] TODO: this isn't going to be right in general!\n      \"--db\",\n      params.localDb,\n```\n\n","done":true,"last_edited":1761771761672,"position":-19.3125,"task_id":"3ec6f5c2-d245-4e43-b599-c0be361cdd80"}
{"desc":"propagate mode\\-only change \\(chmod \\+x\\) without content change\n","done":true,"last_edited":1761540700065,"position":-4.9375,"task_id":"9fdef768-cf20-425c-838c-ab1fe219afde"}
{"desc":"remote scan \\-\\- why does it output _everything_ every time?   that seems very inefficient.  It should output only the records of the database that change, right?\n\n#WORRY  if the remote scan isn't properly fully ingested then the local and remote beta.db are forever in an inconsistent state. \n\nBut right now since we're getting everything every time, it doesn't matter.  But that's pretty wrong.\n\n","done":true,"last_edited":1761720532007,"position":-21.4375,"task_id":"4be0a2f5-fb80-443c-aae9-8bcf5a66f1f6"}
{"desc":"symlinks to directories get turned into directories by sync\n","done":true,"last_edited":1761626504801,"position":-9.8125,"task_id":"d330133e-42c8-4380-b73f-ddb949f99d1b"}
{"desc":"when creating a session, tilde ~ expansion on remote doesn't properly work \\-\\- need to ssh and figure out HOME once\n","done":true,"last_edited":1761771328203,"position":-29.4375,"task_id":"f005f6c8-8a06-4fc2-a0ca-71b96d86c86f"}